categories: ["cs.CV", "cs.LG", "cs.AI"]
keywords:
  # --- 1. 多模态大模型 (LMM) ---
  # 涵盖 LMM, MLLM, 视觉语言模型等
  - "Multimodal Large Model"
  - "Large Multimodal Model"
  - "LMM"
  - "MLLM"
  - "Multimodal Foundation Model"
  - "Large Vision-Language Model"
  - "Vision-Language Model"       # 保留您原有的
  - "Vision Language Model"
  - "Vision and Language"
  - "Language and Vision"
  - "Multi-modal"                # 带连字符
  - "Multimodal"                 # 不带连字符

  # --- 2. 视觉大模型 (LVM) ---
  - "Large Vision Model"
  - "Vision Foundation Model"
  - "Large-scale Vision Model"

  # --- 3. 视频理解与分割 (Video) ---
  - "Video Understanding"
  - "Video Recognition"
  - "Video Segmentation"
  - "Video Object Segmentation"  # VOS
  - "Video Instance Segmentation" # VIS
  - "Video Semantic Segmentation"
  - "Action Recognition"
  - "Action Detection"
  - "Video Captioning"
  - "Video Question Answering"
  - "VideoQA"

  # --- 4. 3D / 4D / 空间理解 (Spatial) ---
  - "3D Understanding"
  - "3D Scene Understanding"
  - "3D Foundation Model"
  - "Large Model for 3D"
  - "3D Generation"
  - "3D Segmentation"
  - "4D Understanding"
  - "4D Reconstruction"
  - "Dynamic Scene"              # 动态场景，常用于4D
  - "Spatial-Temporal"           # 时空
  - "Spatial Intelligence"
  - "Spatial Understanding"
  - "Spatial Reasoning"
  - "Geometric Reasoning"
  - "NeRF"                       # 4D/3D的常见技术
  - "Neural Radiance Fields"

  # --- 5. 强化学习 & 具身智能 (RL / Embodied) ---
  # 结合视觉的RL
  - "Reinforcement Learning"
  - "Vision-based Reinforcement Learning"
  - "Embodied AI"
  - "Embodied Agent"
  - "Decision Making"

  # --- 6. 测评集 (Benchmark) ---
  # 结合 categories (cs.CV, cs.AI) 和 logic: "AND" 会很准
  - "Benchmark"
  - "Multimodal Benchmark"
  - "Large Multimodal Model Benchmark"
  - "LMM Benchmark"
  - "Video Benchmark"
  - "3D Benchmark"
  - "Evaluation of Large Models"
  - "Evaluating Large Models"

logic: "AND"                 # 组间逻辑：categories 与 keywords 间 AND/OR
max_results: 30
sort_by: "lastUpdatedDate"  # 还可以是submittedDate 建议改成lastUpdatedDate按更新时间排，能捞到v2/v3的“新增”
sort_order: "descending"

# zh / en / both
lang: "both"

# —— 摘要设置 ——
# mode: none / heuristic / llm
summary:
  mode: llm # mode: "heuristic"
  # scope: tldr / full / both
  scope: "both"

# —— 邮件发送（QQ 邮箱） ——
email:
  enabled: true
  subject: "[arXiv] Daily Digest"
  smtp_server: "smtp.qq.com"
  smtp_port: 465
  smtp_pass_env: "SMTP_PASS"
  tls: "ssl"  # auto / ssl / starttls
  debug: false     # true 可打印 SMTP 调试日志
  detail: "full"  # simple / full
  max_items: 30
  attach_md: true  # 是否开启Markdown附件
  attach_pdf: false  # 是否开启PDF附件

# —— LLM（DeepSeek/OpenAI 兼容） ——
llm:
  provider: "openai-compatible"     # 兼容 OpenAI SDK 的服务
  # 硅基流动的版本
  base_url: "https://api.siliconflow.cn"
  model: "deepseek-ai/DeepSeek-R1-0528-Qwen3-8B"
  api_key_env: "OPENAI_COMPAT_API_KEY"
  # Deepseek的版本
  # base_url: "https://api.deepseek.com"
  # model: "deepseek-chat"
  # api_key_env: "DS_API_KEY"
  

  system_prompt_en: |
    You are a senior paper-reading assistant. Based on the given metadata and abstract,
    write ONE concise paragraph in English that covers: research motivation, main method,
    and key experimental findings. Be objective and specific; avoid marketing language.
    Preserve any provided links, but do NOT repeat them in the paragraph.
  system_prompt_zh: |
    你是资深论文阅读助手。基于给定的论文元信息与摘要，用中文写「一段」简洁的总结，
    包含研究动机、核心方法与关键实验结果。保持客观、术语准确；避免营销式表述。
    如有链接请保留，但不要在总结里重复链接。

# —— 中文翻译设置（用 LLM 翻译 title/summary） ——
translate:
  enabled: true         # 是否启用
  lang: "zh"            # 目前只需中文；也可扩展 en/ja 等
  fields: ["title", "summary"]   # 可扩：["title","summary","comments"]

site:
  enabled: true
  dir: "docs" 
  title: "arXiv 论文速递"
  keep_runs: 1024         # 历史保留期（按页面份数）
  theme: "light"        # "light" | "dark" | "auto"
  accent: "#2563eb"     # 主题色（可自定义）

freshness:
  since_days: 3650           # 只看最近 N 天内新提交/更新（1=近24h）
  unique_only: true       # 开启跨天去重（见过的 arXiv ID 不再重复发）
  state_path: ".state/seen.json"  # 去重状态文件（会随 docs 一起提交保存）
  fallback_when_empty: false # 当今天无新增时，是否回退展示最近的Top若干（建议false）

scrape:
  html: true               # 先用 HTML 页抓链接
  pdf_if_missing: true     # 若没抓到 code，再去扫 PDF 头部兜底
  pdf_first_page: false    # （可保留为 false；若你想“不管有没有都扫 PDF”，设 true）
  timeout: 10
